<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 我的杂货铺</title>
    <link>https://angrycans.github.io/post/</link>
    <description>Recent content in Posts on 我的杂货铺</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 20 Jul 2022 10:47:48 +0800</lastBuildDate><atom:link href="https://angrycans.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Power_onoff</title>
      <link>https://angrycans.github.io/post/power_onoff/</link>
      <pubDate>Wed, 20 Jul 2022 10:47:48 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/power_onoff/</guid>
      <description>最近在实现一个GPS计时器模块.期间碰到一个最简单的问题.如何实现一个开关机电路. AO3401 +AO3400 mosfet管的实现. power on 高电平 导通 低电平 断开</description>
    </item>
    
    <item>
      <title>Arduino读取cvs格式</title>
      <link>https://angrycans.github.io/post/arduino_cvs_write/</link>
      <pubDate>Sun, 29 May 2022 18:36:22 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/arduino_cvs_write/</guid>
      <description>工具 int csvReadText(File *file, char *str, size_t size, char delim) { uint8_t ch; int rtn; size_t n = 0; while (true) { // check for EOF if (!file-&amp;gt;available()) { rtn = 0; break; } if (file-&amp;gt;read(&amp;amp;ch, 1) != 1) { // read error rtn = -1; break; } // Delete CR. if (ch == &#39;\r&#39;) { continue; } if (ch == delim || ch == &#39;\n&#39;) { rtn = ch; break; } if ((n + 1) &amp;gt;= size) { // string too long rtn = -2; n--; break; } str[n++] = ch; } str[n] = &#39;\0&#39;; Log.traceln(&amp;quot;readText %s&amp;quot;, str); return rtn; } //------------------------------------------------------------------------------ int csvReadInt32(File *file, int32_t *num, char delim) { char buf[20]; char *ptr; int rtn = csvReadText(file, buf, sizeof(buf), delim); if (rtn &amp;lt; 0) return rtn; *num = strtol(buf, &amp;amp;ptr, 10); if (buf == ptr) return -3;</description>
    </item>
    
    <item>
      <title>NodeMCU_littlefs</title>
      <link>https://angrycans.github.io/post/nodeMCU_littlefs/</link>
      <pubDate>Tue, 17 May 2022 10:47:48 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/nodeMCU_littlefs/</guid>
      <description>使用PlatformIO了解arduino littleFS 使用 VS Code + PlatformIO 开发 安装vscode 插件 PlatformIO 使用PlatformIO 新建一个项目LitteFS 修改platformio.ini 为 [env:nodemcuv2] platform = espressif8266 board = nodemcuv2 framework = arduino board_build.filesystem = littlefs 熟悉下PlatformIO 面板 LittleFS 项目新增data文件夹 ,必须使用data名字 文件下面新增</description>
    </item>
    
    <item>
      <title>(3) 搭建httpserver </title>
      <link>https://angrycans.github.io/post/nodemcu_httpserver1/</link>
      <pubDate>Tue, 10 May 2022 14:27:23 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/nodemcu_httpserver1/</guid>
      <description>使用lua 来搭建httpserver nodemcu的官方mod库 https://github.com/nodemcu/nodemcu-firmware/tree/release/lua_modules 开发工具 https://github.com/AndiDittrich/NodeMCU-Tool npm install nodemcu-tool -g</description>
    </item>
    
    <item>
      <title>(2) NodeMCU FirmwareBurn lua固件支持</title>
      <link>https://angrycans.github.io/post/nodeMCU_FirmwareBurn/</link>
      <pubDate>Mon, 09 May 2022 16:11:35 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/nodeMCU_FirmwareBurn/</guid>
      <description>nodemcu lua固件烧录 固件下载地址 https://nodemcu-build.com/ 烧录工具 https://github.com/marcelstoer/nodemcu-pyflasher 选择需要的模块编译 几分钟后邮箱会收到bin文件,进行烧录 ESPlorer 下载安装 https://github.com/4refr0nt/ESPlorer/releases Test led = 4 gpio.mode(led,gpio.OUTPUT,gpio.PULLUP) gpio.write(led,gpio.LOW)</description>
    </item>
    
    <item>
      <title>(1)NodeMCU环境搭建 MAC</title>
      <link>https://angrycans.github.io/post/nodeMCU_setting/</link>
      <pubDate>Sat, 07 May 2022 15:37:56 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/nodeMCU_setting/</guid>
      <description>1. arduino install https://www.arduino.cc/en/software 2. ESP8266 install config http://arduino.esp8266.com/stable/package_esp8266com_index.json install esp8266 开发板 3. Test usb 连接好nodemcu 设置端口 选择blink</description>
    </item>
    
  </channel>
</rss>
