<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>arduino on 我的杂货铺</title>
    <link>https://angrycans.github.io/categories/arduino/</link>
    <description>Recent content in arduino on 我的杂货铺</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 04 Dec 2022 22:32:02 +0800</lastBuildDate><atom:link href="https://angrycans.github.io/categories/arduino/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arduino datetime 常用方法</title>
      <link>https://angrycans.github.io/post/arduino_datetime/</link>
      <pubDate>Sun, 04 Dec 2022 22:32:02 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/arduino_datetime/</guid>
      <description>https://github.com/tobozo/ESP32-BLECollector/blob/master/ESP32-BLECollector/DateTime.h https://github.com/tobozo/ESP32-BLECollector/blob/master/ESP32-BLECollector/BLEFileSharing.h https://github.com/PaulStoffregen/Time DateTime UTCTime = DateTime(BLERemoteTime.year, BLERemoteTime.month, BLERemoteTime.day, BLERemoteTime.hour, BLERemoteTime.minutes, BLERemoteTime.seconds); DateTime LocalTime = UTCTime.unixtime() + BLERemoteTime.tz * 3600; dumpTime(&amp;#34;UTC:&amp;#34;, UTCTime); dumpTime(&amp;#34;Local:&amp;#34;, LocalTime); setTime( LocalTime.unixtime() ); timeval epoch = {(time_t)LocalTime.unixtime(), 0}; const timeval *tv = &amp;amp;epoch; settimeofday(tv, NULL); struct tm now; getLocalTime(&amp;amp;now,0); Serial.printf(&amp;#34;[Heap: %06d] Time has been set to: %04d-%02d-%02d %02d:%02d:%02d\n&amp;#34;, freeheap, LocalTime.year(), LocalTime.month(), LocalTime.day(), LocalTime.hour(), LocalTime.minute(), LocalTime.second() );</description>
    </item>
    
    <item>
      <title>Arduino FS 常用方法</title>
      <link>https://angrycans.github.io/post/arduino_fs/</link>
      <pubDate>Sat, 03 Dec 2022 14:48:15 +0800</pubDate>
      
      <guid>https://angrycans.github.io/post/arduino_fs/</guid>
      <description>Arduino fs 常用方法 https://github.com/espressif/arduino-esp32/blob/master/libraries/LittleFS/examples/LITTLEFS_test/LITTLEFS_test.ino 包括了 createDir removeDir listDir readfile writefile appendFile deleteFile rename #include &amp;lt;Arduino.h&amp;gt; #include &amp;#34;FS.h&amp;#34; #include &amp;lt;LittleFS.h&amp;gt; /* You only need to format LittleFS the first time you run a test or else use the LITTLEFS plugin to create a partition https://github.com/lorol/arduino-esp32littlefs-plugin If you test two partitions, you need to use a custom partition.csv file, see in the sketch folder */ //#define TWOPART #define FORMAT_LITTLEFS_IF_FAILED true void listDir(fs::FS &amp;amp;fs, const char * dirname, uint8_t levels){ Serial.printf(&amp;#34;Listing directory: %s\r\n&amp;#34;, dirname); File root = fs.open(dirname); if(!root){ Serial.println(&amp;#34;- failed to open directory&amp;#34;); return; } if(!root.isDirectory()){ Serial.println(&amp;#34; - not a directory&amp;#34;); return; } File file = root.openNextFile(); while(file){ if(file.isDirectory()){ Serial.print(&amp;#34; DIR : &amp;#34;); Serial.println(file.name()); if(levels){ listDir(fs, file.path(), levels -1); } } else { Serial.print(&amp;#34; FILE: &amp;#34;); Serial.print(file.name()); Serial.print(&amp;#34;\tSIZE: &amp;#34;); Serial.println(file.size()); } file = root.openNextFile(); } } void</description>
    </item>
    
  </channel>
</rss>
